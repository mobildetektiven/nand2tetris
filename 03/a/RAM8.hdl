// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Check which register to update based on address
    DMux8Way(in=load, sel=address, a=reg0Load, b=reg1Load, c=reg2Load, d=reg3Load, e=reg4Load, f=reg5Load, g=reg6Load, h=reg7Load);
    
    //Update selected register, the rest keep their current values
    Register(in=in, load=reg0Load, out=reg0Out);
    Register(in=in, load=reg1Load, out=reg1Out);
    Register(in=in, load=reg2Load, out=reg2Out);
    Register(in=in, load=reg3Load, out=reg3Out);
    Register(in=in, load=reg4Load, out=reg4Out);
    Register(in=in, load=reg5Load, out=reg5Out);
    Register(in=in, load=reg6Load, out=reg6Out);
    Register(in=in, load=reg7Load, out=reg7Out);

    //Update output value
    Mux8Way16(a=reg0Out, b=reg1Out, c=reg2Out, d=reg3Out, e=reg4Out, f=reg5Out, g=reg6Out, h=reg7Out, sel=address, out=out);
}